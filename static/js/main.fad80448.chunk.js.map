{"version":3,"sources":["meteor-map/NavBar.js","meteor-map/MeteorTable.js","meteor-map/MeteorMapMap.js","meteor-map/MeteorMap.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textField","backgroundColor","toolBar","NavBar","props","css","Fragment","className","AppBar","position","Toolbar","Typography","variant","TextField","id","label","onChange","e","onTextFieldChange","target","value","width","row","cell","color","MeteorTable","classes","React","useState","page","setPage","rowsPerPage","setRowsPerPage","columns","data","Paper","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","TableContainer","Table","aria-label","TableHead","TableRow","map","column","TableCell","key","style","minWidth","TableBody","slice","onClick","onRowClicked","handleRowClick","hover","col","MeteorMapMap","handleOnViewportChanged","bind","viewport","this","onViewportChanged","messages","markerMessage","marker","Marker","markerLatLng","Tooltip","element","Map","center","latlng","zoom","height","TileLayer","url","attribution","Component","MeteorMap","setState","reclat","reclong","hasOwnProperty","push","val","trim","console","log","filteredData","meteorData","filter","toUpperCase","includes","state","lat","lng","Container","maxWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fad80448.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  textField: {\r\n    marginRight: theme.spacing(2),\r\n    backgroundColor: \"white\"\r\n  },\r\n  toolBar: {\r\n    backgroundColor: \" #9E9E9E\"\r\n  }\r\n}));\r\n\r\nexport default function NavBar(props) {\r\n  const css = useStyles();\r\n\r\n  const handleTextOnChange = e => {\r\n    if (props.onTextFieldChange) {\r\n      props.onTextFieldChange(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={css.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar className={css.toolBar}>\r\n            <Typography variant=\"h6\" className={css.title}>\r\n              Meteor Maps\r\n            </Typography>\r\n            <TextField\r\n              id=\"outlined-secondary\"\r\n              label=\"Search By Name\"\r\n              variant=\"outlined\"\r\n              className={css.textField}\r\n              onChange={handleTextOnChange}\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  row: {\r\n    backgroundColor: \"#c7c7c7\"\r\n  },\r\n  cell: {\r\n    color: \"#000000\"\r\n  }\r\n}));\r\n\r\nexport default function MeteorTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleRowClick = row => {\r\n    props.onRowClicked(row);\r\n  };\r\n\r\n  const columns = props.columns ? props.columns : [];\r\n\r\n  const data = props.data ? props.data : [];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.root}>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n        <TableContainer>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow className={classes.row}>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(row => {\r\n                  return (\r\n                    <TableRow\r\n                      key={row.id}\r\n                      onClick={() => handleRowClick(row)}\r\n                      hover={true}\r\n                      className={classes.row}\r\n                    >\r\n                      {columns.map(col => {\r\n                        return (\r\n                          <TableCell key={col.id} className={classes.cell}>\r\n                            {row[col.id]}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Map, Marker, Tooltip, TileLayer } from \"react-leaflet\";\r\n\r\nexport default class MeteorMapMap extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleOnViewportChanged = this.handleOnViewportChanged.bind(this);\r\n  }\r\n\r\n  handleOnViewportChanged(viewport) {\r\n    this.props.onViewportChanged(viewport);\r\n  }\r\n\r\n  render() {\r\n    const messages = this.props.markerMessage;\r\n    const marker = messages ? (\r\n      <Marker position={this.props.markerLatLng}>\r\n        <Tooltip>\r\n          <span>\r\n            {messages.map(element => {\r\n              return <p key={element}>{element}</p>;\r\n            })}\r\n          </span>\r\n        </Tooltip>\r\n      </Marker>\r\n    ) : null;\r\n    return (\r\n      <React.Fragment>\r\n        <Map\r\n          center={this.props.latlng}\r\n          zoom={this.props.zoom}\r\n          style={{ height: \"400px\" }}\r\n          onViewportChanged={this.handleOnViewportChanged}\r\n        >\r\n          <TileLayer\r\n            url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n          {marker}\r\n        </Map>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport MeteorTable from \"./MeteorTable\";\r\nimport MeteorMapMap from \"./MeteorMapMap\";\r\nimport meteorData from \"./meteorData.json\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nexport default class MeteorMap extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      latlng: {\r\n        lat: 51.505,\r\n        lng: -0.09\r\n      },\r\n      zoom: 8,\r\n      markerLatLng: {\r\n        lat: 51.505,\r\n        lng: -0.09\r\n      },\r\n      markerMessage: [\"Click a row to see the impact site\"],\r\n      data: meteorData,\r\n      columns: [\r\n        { id: \"id\", label: \"Id\", minWidth: 170 },\r\n        { id: \"name\", label: \"Name\", minWidth: 170 },\r\n        { id: \"year\", label: \"Year\", minWidth: 100 },\r\n        { id: \"mass (g)\", label: \"Mass(g)\", minWidth: 170 },\r\n        { id: \"reclat\", label: \"Lat\", minWidth: 170 },\r\n        { id: \"reclong\", label: \"Lng\", minWidth: 170 }\r\n      ]\r\n    };\r\n  }\r\n\r\n  onViewportChanged = viewport => {\r\n    this.setState({ latlng: viewport.center, zoom: viewport.zoom });\r\n  };\r\n\r\n  onRowClicked = row => {\r\n    this.setState({ latlng: [row.reclat, row.reclong], zoom: 13 });\r\n    this.setState({ markerLatLng: [row.reclat, row.reclong] });\r\n\r\n    let messages = [];\r\n    for (const key in row) {\r\n      if (row.hasOwnProperty(key)) {\r\n        const element = row[key];\r\n        messages.push(key + \": \" + element);\r\n      }\r\n    }\r\n    this.setState({ markerMessage: messages });\r\n  };\r\n\r\n  onTextFieldChange = val => {\r\n    if (val.trim()) {\r\n      console.log(val.trim());\r\n      const filteredData = meteorData.filter(row => {\r\n        return row[\"name\"].toUpperCase().includes(val.trim().toUpperCase());\r\n      });\r\n      this.setState({ data: filteredData });\r\n    } else {\r\n      this.setState({ data: meteorData });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Container maxWidth={false}>\r\n          <NavBar onTextFieldChange={this.onTextFieldChange} />\r\n          {\r\n            <MeteorMapMap\r\n              latlng={this.state.latlng}\r\n              zoom={this.state.zoom}\r\n              markerLatLng={this.state.markerLatLng}\r\n              onViewportChanged={this.onViewportChanged}\r\n              markerMessage={this.state.markerMessage}\r\n            />\r\n          }\r\n          <MeteorTable\r\n            onRowClicked={this.onRowClicked}\r\n            data={this.state.data}\r\n            columns={this.state.columns}\r\n          />\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MeteorMap from \"./meteor-map/MeteorMap\";\r\n\r\nReactDOM.render(<MeteorMap />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}