{"version":3,"sources":["meteor-map/NavBar.js","meteor-map/MeteorTable.js","meteor-map/MeteorMapMap.js","meteor-map/MeteorMap.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textField","backgroundColor","toolBar","color","NavBar","css","Fragment","className","AppBar","position","Toolbar","Typography","variant","margin","MeteorTable","props","React","useState","page","setPage","rowsPerPage","setRowsPerPage","data","setData","Paper","TextField","id","label","onChange","e","val","target","value","trim","filter","row","toString","includes","toUpperCase","size","TableContainer","Table","TableHead","TableRow","columns","map","c","TableCell","key","name","TableBody","slice","hover","onClick","onRowClicked","handleRowClick","column","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","defaultProps","MeteorMapMap","handleOnViewportChanged","bind","viewport","this","onViewportChanged","messages","markerMessage","marker","Marker","markerLatLng","Tooltip","element","Map","center","latlng","zoom","style","height","TileLayer","url","attribution","Component","MeteorMap","setState","hasOwnProperty","push","state","lat","lng","meteorData","Box","width","ReactDOM","render","document","getElementById"],"mappings":"2521RAMMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,GAEZK,UAAW,CACTH,YAAaJ,EAAMK,QAAQ,GAC3BG,gBAAiB,SAEnBC,QAAS,CACPD,gBAAiB,UACjBE,MAAO,eAII,SAASC,IACtB,IAAMC,EAAMd,IAEZ,OACE,kBAAC,IAAMe,SAAP,KACE,yBAAKC,UAAWF,EAAIX,MAClB,kBAACc,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CAASH,UAAWF,EAAIH,SACtB,kBAACS,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWF,EAAIN,OAAxC,mB,4FCrBNR,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCO,UAAW,CACTa,OAAQpB,EAAMK,QAAQ,QAIpBgB,EAAc,SAAAC,GAClB,IAAMV,EAAMd,IADe,EAEHyB,IAAMC,SAAS,GAFZ,mBAEpBC,EAFoB,KAEdC,EAFc,OAGWH,IAAMC,SAAS,IAH1B,mBAGpBG,EAHoB,KAGPC,EAHO,OAIHL,IAAMC,SAASF,EAAMO,MAJlB,mBAIpBA,EAJoB,KAIdC,EAJc,KAqD3B,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,SACNf,QAAQ,WACRgB,SAxCoB,SAAAC,GACxB,IAAMC,EAAMD,EAAEE,OAAOC,MACrBF,EAAIG,OACAV,EACER,EAAMO,KAAKY,QACT,SAAAC,GAAG,OACDA,EAAG,GAAOC,WAAWC,SAASP,EAAIG,SAClCE,EAAG,KAASG,cAAcD,SAASP,EAAIG,OAAOK,gBAC9CH,EAAG,KAASG,cAAcD,SAASP,EAAIG,OAAOK,gBAC9CH,EAAI,YAAYC,WAAWC,SAASP,EAAIG,SACxCE,EAAG,OAAWC,WAAWC,SAASP,EAAIG,SACtCE,EAAG,QAAYC,WAAWC,SAASP,EAAIG,YAG7CV,EAAQR,EAAMO,MAClBH,EAAQ,IA0BJZ,UAAWF,EAAIL,UACfuC,KAAK,UAEP,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACG5B,EAAM6B,QAAQC,KAAI,SAAAC,GACjB,OAAO,kBAACC,EAAA,EAAD,CAAWC,IAAKF,EAAEG,MAAOH,EAAEnB,YAIxC,kBAACuB,EAAA,EAAD,KAA+B5B,EAjClC6B,MAAMjC,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CyB,KAAI,SAAAV,GACH,OACE,kBAACQ,EAAA,EAAD,CAAUS,OAAK,EAACJ,IAAKb,EAAIT,GAAI2B,QAAS,kBA3BvB,SAAAlB,GACrBpB,EAAMuC,aAAanB,GA0B+BoB,CAAepB,KACxDpB,EAAM6B,QAAQC,KAAI,SAAAW,GACjB,OACE,kBAACT,EAAA,EAAD,CAAWC,IAAKQ,EAAOP,MAAOd,EAAIqB,EAAOP,iBA8BnD,kBAACQ,EAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVC,MAAOtC,EAAKuC,OACZzC,YAAaA,EACbF,KAAMA,EACN4C,aA3EmB,SAACC,EAAOC,GAC/B7C,EAAQ6C,IA2EJC,oBAxE0B,SAAAF,GAC9B1C,GAAgB0C,EAAMhC,OAAOC,OAC7Bb,EAAQ,QAkFZL,EAAYoD,aAAe,CACzB5C,KAAM,GACNsB,QAAS,GACTU,aAAc,cAGDxC,Q,2CCpHMqD,E,YACnB,WAAYpD,GAAQ,IAAD,8BACjB,4CAAMA,KACDqD,wBAA0B,EAAKA,wBAAwBC,KAA7B,gBAFd,E,qFAKKC,GACtBC,KAAKxD,MAAMyD,kBAAkBF,K,+BAI7B,IAAMG,EAAWF,KAAKxD,MAAM2D,cACtBC,EAASF,EACb,kBAACG,EAAA,EAAD,CAAQnE,SAAU8D,KAAKxD,MAAM8D,cAC3B,kBAACC,EAAA,EAAD,KACE,8BACGL,EAAS5B,KAAI,SAAAkC,GACZ,OAAO,uBAAG/B,IAAK+B,GAAUA,SAK/B,KACJ,OACE,kBAAC,IAAMzE,SAAP,KACE,kBAAC0E,EAAA,EAAD,CACEC,OAAQV,KAAKxD,MAAMmE,OACnBC,KAAMZ,KAAKxD,MAAMoE,KACjBC,MAAO,CAAEC,OAAQ,SACjBb,kBAAmBD,KAAKH,yBAExB,kBAACkB,EAAA,EAAD,CACEC,IAAI,0CACJC,YAAY,2EAEbb,Q,GAnC+B3D,IAAMyE,W,iBCG3BC,E,YACnB,WAAY3E,GAAQ,IAAD,8BACjB,4CAAMA,KAwBRyD,kBAAoB,SAAAF,GAClB,EAAKqB,SAAS,CAAET,OAAQZ,EAASW,OAAQE,KAAMb,EAASa,QA1BvC,EA6BnB7B,aAAe,SAAAnB,GACb,IAAM1B,EAAW,CAAC0B,EAAG,OAAYA,EAAG,SACpC,EAAKwD,SAAS,CAAET,OAAQzE,EAAU0E,KAAM,KACxC,EAAKQ,SAAS,CAAEd,aAAcpE,IAE9B,IAAIgE,EAAW,GACf,IAAK,IAAMzB,KAAOb,EAChB,GAAIA,EAAIyD,eAAe5C,GAAM,CAC3B,IAAM+B,EAAU5C,EAAIa,GACpByB,EAASoB,KAAK7C,EAAM,KAAO+B,GAG/B,EAAKY,SAAS,CAAEjB,cAAeD,KAvC/B,EAAKqB,MAAQ,CACXZ,OAAQ,CACNa,IAAK,OACLC,KAAM,KAERb,KAAM,EACNN,aAAc,CACZkB,IAAK,OACLC,KAAM,KAERtB,cAAe,CAAC,sCAChBpD,KAAM2E,EACNrD,QAAS,CACP,CAAEK,KAAM,KAAMtB,MAAO,MACrB,CAAEsB,KAAM,OAAQtB,MAAO,QACvB,CAAEsB,KAAM,OAAQtB,MAAO,QACvB,CAAEsB,KAAM,WAAYtB,MAAO,WAC3B,CAAEsB,KAAM,SAAUtB,MAAO,OACzB,CAAEsB,KAAM,UAAWtB,MAAO,SApBb,E,sEA6CjB,OACE,kBAAC,IAAMrB,SAAP,KACE,kBAAC4F,EAAA,EAAD,CAAKC,MAAM,QACT,kBAAC/F,EAAD,MACA,kBAAC,EAAD,CACE8E,OAAQX,KAAKuB,MAAMZ,OACnBC,KAAMZ,KAAKuB,MAAMX,KACjBN,aAAcN,KAAKuB,MAAMjB,aACzBL,kBAAmBD,KAAKC,kBACxBE,cAAeH,KAAKuB,MAAMpB,gBAE5B,kBAAC,EAAD,CACEpB,aAAciB,KAAKjB,aACnBhC,KAAMiD,KAAKuB,MAAMxE,KACjBsB,QAAS2B,KAAKuB,MAAMlD,gB,GA5DO5B,IAAMyE,WCF7CW,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,W","file":"static/js/main.10ac1229.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  textField: {\r\n    marginRight: theme.spacing(2),\r\n    backgroundColor: \"white\"\r\n  },\r\n  toolBar: {\r\n    backgroundColor: \"#3c3c3c\",\r\n    color: \"#f9f9f9\"\r\n  }\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const css = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={css.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar className={css.toolBar}>\r\n            <Typography variant=\"h5\" className={css.title}>\r\n              Meteor Maps\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textField: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst MeteorTable = props => {\r\n  const css = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [data, setData] = React.useState(props.data);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleRowClick = row => {\r\n    props.onRowClicked(row);\r\n  };\r\n\r\n  const onTextFieldChange = e => {\r\n    const val = e.target.value;\r\n    val.trim()\r\n      ? setData(\r\n          props.data.filter(\r\n            row =>\r\n              row[\"id\"].toString().includes(val.trim()) ||\r\n              row[\"name\"].toUpperCase().includes(val.trim().toUpperCase()) ||\r\n              row[\"year\"].toUpperCase().includes(val.trim().toUpperCase()) ||\r\n              row[\"mass (g)\"].toString().includes(val.trim()) ||\r\n              row[\"reclat\"].toString().includes(val.trim()) ||\r\n              row[\"reclong\"].toString().includes(val.trim())\r\n          )\r\n        )\r\n      : setData(props.data);\r\n    setPage(0);\r\n  };\r\n\r\n  const returnFilteredRows = rows => {\r\n    return rows\r\n      .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n      .map(row => {\r\n        return (\r\n          <TableRow hover key={row.id} onClick={() => handleRowClick(row)}>\r\n            {props.columns.map(column => {\r\n              return (\r\n                <TableCell key={column.name}>{row[column.name]}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        label=\"Search\"\r\n        variant=\"outlined\"\r\n        onChange={onTextFieldChange}\r\n        className={css.textField}\r\n        size=\"small\"\r\n      />\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map(c => {\r\n                return <TableCell key={c.name}>{c.label}</TableCell>;\r\n              })}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>{returnFilteredRows(data)}</TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nMeteorTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  onRowClicked: PropTypes.func.isRequired\r\n};\r\n\r\nMeteorTable.defaultProps = {\r\n  data: [],\r\n  columns: [],\r\n  onRowClicked: () => {}\r\n};\r\n\r\nexport default MeteorTable;\r\n","import React from \"react\";\r\nimport { Map, Marker, Tooltip, TileLayer } from \"react-leaflet\";\r\n\r\nexport default class MeteorMapMap extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleOnViewportChanged = this.handleOnViewportChanged.bind(this);\r\n  }\r\n\r\n  handleOnViewportChanged(viewport) {\r\n    this.props.onViewportChanged(viewport);\r\n  }\r\n\r\n  render() {\r\n    const messages = this.props.markerMessage;\r\n    const marker = messages ? (\r\n      <Marker position={this.props.markerLatLng}>\r\n        <Tooltip>\r\n          <span>\r\n            {messages.map(element => {\r\n              return <p key={element}>{element}</p>;\r\n            })}\r\n          </span>\r\n        </Tooltip>\r\n      </Marker>\r\n    ) : null;\r\n    return (\r\n      <React.Fragment>\r\n        <Map\r\n          center={this.props.latlng}\r\n          zoom={this.props.zoom}\r\n          style={{ height: \"400px\" }}\r\n          onViewportChanged={this.handleOnViewportChanged}\r\n        >\r\n          <TileLayer\r\n            url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n          {marker}\r\n        </Map>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport MeteorTable from \"./MeteorTable\";\r\nimport MeteorMapMap from \"./MeteorMapMap\";\r\nimport meteorData from \"./meteorData.json\";\r\nimport Box from \"@material-ui/core/Box\";\r\nexport default class MeteorMap extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      latlng: {\r\n        lat: 51.505,\r\n        lng: -0.09\r\n      },\r\n      zoom: 8,\r\n      markerLatLng: {\r\n        lat: 51.505,\r\n        lng: -0.09\r\n      },\r\n      markerMessage: [\"Click a row to see the impact site\"],\r\n      data: meteorData,\r\n      columns: [\r\n        { name: \"id\", label: \"Id\" },\r\n        { name: \"name\", label: \"Name\" },\r\n        { name: \"year\", label: \"Year\" },\r\n        { name: \"mass (g)\", label: \"Mass(g)\" },\r\n        { name: \"reclat\", label: \"Lat\" },\r\n        { name: \"reclong\", label: \"Lng\" }\r\n      ]\r\n    };\r\n  }\r\n\r\n  onViewportChanged = viewport => {\r\n    this.setState({ latlng: viewport.center, zoom: viewport.zoom });\r\n  };\r\n\r\n  onRowClicked = row => {\r\n    const position = [row[\"reclat\"], row[\"reclong\"]];\r\n    this.setState({ latlng: position, zoom: 13 });\r\n    this.setState({ markerLatLng: position });\r\n\r\n    let messages = [];\r\n    for (const key in row) {\r\n      if (row.hasOwnProperty(key)) {\r\n        const element = row[key];\r\n        messages.push(key + \": \" + element);\r\n      }\r\n    }\r\n    this.setState({ markerMessage: messages });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Box width=\"100%\">\r\n          <NavBar />\r\n          <MeteorMapMap\r\n            latlng={this.state.latlng}\r\n            zoom={this.state.zoom}\r\n            markerLatLng={this.state.markerLatLng}\r\n            onViewportChanged={this.onViewportChanged}\r\n            markerMessage={this.state.markerMessage}\r\n          />\r\n          <MeteorTable\r\n            onRowClicked={this.onRowClicked}\r\n            data={this.state.data}\r\n            columns={this.state.columns}\r\n          />\r\n        </Box>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MeteorMap from \"./meteor-map/MeteorMap\";\r\n\r\nReactDOM.render(<MeteorMap />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}