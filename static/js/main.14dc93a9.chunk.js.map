{"version":3,"sources":["meteor-map/NavBar.js","meteor-map/MeteorTable.js","meteor-map/MeteorMapMap.js","meteor-map/MeteorMap.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textField","backgroundColor","toolBar","color","NavBar","css","Fragment","className","AppBar","position","Toolbar","Typography","variant","MeteorTable","props","options","filterType","onRowClick","row","onRowClicked","handleRowClick","columns","data","MeteorMapMap","handleOnViewportChanged","bind","viewport","this","onViewportChanged","messages","markerMessage","marker","Marker","markerLatLng","Tooltip","map","element","key","Map","center","latlng","zoom","style","height","TileLayer","url","attribution","React","Component","MeteorMap","setState","index","length","push","state","label","lat","lng","meteorData","name","Box","width","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14dc93a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  textField: {\r\n    marginRight: theme.spacing(2),\r\n    backgroundColor: \"white\"\r\n  },\r\n  toolBar: {\r\n    backgroundColor: \"#3c3c3c\",\r\n    color: \"#f9f9f9\"\r\n  }\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const css = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={css.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar className={css.toolBar}>\r\n            <Typography variant=\"h4\" className={css.title}>\r\n              Meteor Maps\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nexport default function MeteorTable(props) {\r\n  const handleRowClick = row => {\r\n    props.onRowClicked(row);\r\n  };\r\n\r\n  const options = {\r\n    filterType: \"checkbox\",\r\n    onRowClick: row => handleRowClick(row)\r\n  };\r\n\r\n  const columns = props.columns ? props.columns : [];\r\n  const data = props.data ? props.data : [];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MUIDataTable\r\n        title={\"Data\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Map, Marker, Tooltip, TileLayer } from \"react-leaflet\";\r\n\r\nexport default class MeteorMapMap extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleOnViewportChanged = this.handleOnViewportChanged.bind(this);\r\n  }\r\n\r\n  handleOnViewportChanged(viewport) {\r\n    this.props.onViewportChanged(viewport);\r\n  }\r\n\r\n  render() {\r\n    const messages = this.props.markerMessage;\r\n    const marker = messages ? (\r\n      <Marker position={this.props.markerLatLng}>\r\n        <Tooltip>\r\n          <span>\r\n            {messages.map(element => {\r\n              return <p key={element}>{element}</p>;\r\n            })}\r\n          </span>\r\n        </Tooltip>\r\n      </Marker>\r\n    ) : null;\r\n    return (\r\n      <React.Fragment>\r\n        <Map\r\n          center={this.props.latlng}\r\n          zoom={this.props.zoom}\r\n          style={{ height: \"400px\" }}\r\n          onViewportChanged={this.handleOnViewportChanged}\r\n        >\r\n          <TileLayer\r\n            url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n          {marker}\r\n        </Map>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport MeteorTable from \"./MeteorTable\";\r\nimport MeteorMapMap from \"./MeteorMapMap\";\r\nimport meteorData from \"./meteorData.json\";\r\nimport Box from \"@material-ui/core/Box\";\r\nexport default class MeteorMap extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      latlng: {\r\n        lat: 51.505,\r\n        lng: -0.09\r\n      },\r\n      zoom: 8,\r\n      markerLatLng: {\r\n        lat: 51.505,\r\n        lng: -0.09\r\n      },\r\n      markerMessage: [\"Click a row to see the impact site\"],\r\n      data: meteorData,\r\n      columns: [\r\n        { name: \"id\", label: \"Id\" },\r\n        { name: \"name\", label: \"Name\" },\r\n        { name: \"year\", label: \"Year\" },\r\n        { name: \"mass (g)\", label: \"Mass(g)\" },\r\n        { name: \"reclat\", label: \"Lat\" },\r\n        { name: \"reclong\", label: \"Lng\" }\r\n      ]\r\n    };\r\n  }\r\n\r\n  onViewportChanged = viewport => {\r\n    this.setState({ latlng: viewport.center, zoom: viewport.zoom });\r\n  };\r\n\r\n  onRowClicked = row => {\r\n    this.setState({ latlng: [row[4], row[5]], zoom: 13 });\r\n    this.setState({ markerLatLng: [row[4], row[5]] });\r\n\r\n    let messages = [];\r\n\r\n    for (let index = 0; index < row.length; index++) {\r\n      const element = row[index];\r\n      messages.push(this.state.columns[index].label + \": \" + element);\r\n    }\r\n\r\n    this.setState({ markerMessage: messages });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Box width=\"100%\">\r\n          <NavBar />\r\n          <MeteorMapMap\r\n            latlng={this.state.latlng}\r\n            zoom={this.state.zoom}\r\n            markerLatLng={this.state.markerLatLng}\r\n            onViewportChanged={this.onViewportChanged}\r\n            markerMessage={this.state.markerMessage}\r\n          />\r\n          <MeteorTable\r\n            onRowClicked={this.onRowClicked}\r\n            data={this.state.data}\r\n            columns={this.state.columns}\r\n          />\r\n        </Box>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MeteorMap from \"./meteor-map/MeteorMap\";\r\n\r\nReactDOM.render(<MeteorMap />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}